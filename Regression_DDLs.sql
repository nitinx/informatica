--File Metadata
CREATE TABLE FILE_METADATA 
(
  FILE_ID INTEGER NOT NULL, 
  FILE_NAME VARCHAR2(100) NOT NULL, 
  COLUMN_ID INTEGER NOT NULL, 
  COLUMN_NAME VARCHAR2(100) NOT NULL, 
  KEY_FLAG VARCHAR2(1) NOT NULL, 
  CHECK_FLAG VARCHAR2(1) NOT NULL,
  CONSTRAINT FILE_METADATA_PK PRIMARY KEY (FILE_ID, COLUMN_ID)
);
COMMENT ON TABLE FILE_METADATA IS 'Metadata Table. Contains the file layout and identifies key columns / columns to be ignored in comparison';
COMMENT ON COLUMN FILE_METADATA.FILE_ID IS 'File ID';
COMMENT ON COLUMN FILE_METADATA.FILE_NAME IS 'File Name';
COMMENT ON COLUMN FILE_METADATA.COLUMN_ID IS 'Column ID/Position';
COMMENT ON COLUMN FILE_METADATA.COLUMN_NAME IS 'Column Name';
COMMENT ON COLUMN FILE_METADATA.KEY_FLAG IS 'Y/N Flag to determine Key column';
COMMENT ON COLUMN FILE_METADATA.CHECK_FLAG IS 'Y/N Flag to determine if column is to be compared';

--Compare File Summary
CREATE TABLE COMPARE_FILE_SUMMARY 
(
  COMPARE_ID INTEGER NOT NULL,
  COMPARE_DATE DATE,
  FILE_ID INTEGER,
  CNT_BASELINE INTEGER,
  CNT_NEW INTEGER,
  CNT_KEY_MATCH INTEGER,
  CNT_NKEY_MATCH INTEGER,
  CNT_NKEY_MISMATCH INTEGER,
  CNT_ORPHAN_BASELINE INTEGER,
  CNT_ORPHAN_NEW INTEGER,
  CONSTRAINT COMPARE_FILE_SUMMARY_PK PRIMARY KEY (COMPARE_ID)
);
COMMENT ON TABLE COMPARE_FILE_SUMMARY IS 'Compare File Summary. Comparison metrics at a file level';
COMMENT ON COLUMN COMPARE_FILE_SUMMARY.COMPARE_ID IS 'Compare ID';
COMMENT ON COLUMN COMPARE_FILE_SUMMARY.COMPARE_DATE IS 'Compare Date';
COMMENT ON COLUMN COMPARE_FILE_SUMMARY.FILE_ID IS 'File ID';
COMMENT ON COLUMN COMPARE_FILE_SUMMARY.CNT_BASELINE IS '# of records in the BASELINE file';
COMMENT ON COLUMN COMPARE_FILE_SUMMARY.CNT_NEW IS '# of records in the NEW file';
COMMENT ON COLUMN COMPARE_FILE_SUMMARY.CNT_KEY_MATCH IS '# of matching (Key) records between the BASELINE and NEW files';
COMMENT ON COLUMN COMPARE_FILE_SUMMARY.CNT_NKEY_MATCH IS '# of matching (Key) records between the BASELINE and NEW files';
COMMENT ON COLUMN COMPARE_FILE_SUMMARY.CNT_NKEY_MISMATCH IS '# of mismatching (Non Key) records between the BASELINE and NEW files';
COMMENT ON COLUMN COMPARE_FILE_SUMMARY.CNT_ORPHAN_BASELINE IS '# of Orphan records in the BASELINE file';
COMMENT ON COLUMN COMPARE_FILE_SUMMARY.CNT_ORPHAN_NEW IS '# of Orphan records in the NEW file';

--Compare Column Summary
CREATE TABLE COMPARE_COLUMN_SUMMARY 
(
  COMPARE_ID INTEGER NOT NULL,
  FILE_ID INTEGER NOT NULL,
  COLUMN_ID INTEGER NOT NULL, 
  COLUMN_NAME VARCHAR2(100),
  CNT_MATCH INTEGER,
  CNT_MISMATCH INTEGER,
  CONSTRAINT COMPARE_COLUMN_SUMMARY_PK PRIMARY KEY (COMPARE_ID, FILE_ID, COLUMN_ID)
);
COMMENT ON TABLE COMPARE_COLUMN_SUMMARY IS 'Compare Column Summary. Comparison metrics at a column level';
COMMENT ON COLUMN COMPARE_COLUMN_SUMMARY.COMPARE_ID IS 'Compare ID';
COMMENT ON COLUMN COMPARE_COLUMN_SUMMARY.FILE_ID IS 'File ID';
COMMENT ON COLUMN COMPARE_COLUMN_SUMMARY.COLUMN_ID IS 'Column ID';
COMMENT ON COLUMN COMPARE_COLUMN_SUMMARY.COLUMN_NAME IS 'Column Name';
COMMENT ON COLUMN COMPARE_COLUMN_SUMMARY.CNT_MATCH IS '# of records with matching column values';
COMMENT ON COLUMN COMPARE_COLUMN_SUMMARY.CNT_MISMATCH IS '# of records with mismatching column values';

--Compare Column Detail
CREATE TABLE COMPARE_COLUMN_DETAIL 
(
  COMPARE_ID INTEGER NOT NULL,
  FILE_ID INTEGER NOT NULL,
  RECORD_KEY VARCHAR2(1000) NOT NULL,
  COLUMN_ID INTEGER NOT NULL, 
  COLUMN_NAME VARCHAR2(100),
  VALUE_BASELINE VARCHAR2(100),
  VALUE_NEW VARCHAR2(100),
  CONSTRAINT COMPARE_COLUMN_DETAIL_PK PRIMARY KEY (COMPARE_ID, FILE_ID, RECORD_KEY, COLUMN_ID)
);
COMMENT ON TABLE COMPARE_COLUMN_DETAIL IS 'Compare Column Detail. Column level deviations/mismatches';
COMMENT ON COLUMN COMPARE_COLUMN_DETAIL.COMPARE_ID IS 'Compare ID';
COMMENT ON COLUMN COMPARE_COLUMN_DETAIL.FILE_ID IS 'File ID';
COMMENT ON COLUMN COMPARE_COLUMN_DETAIL.FILE_ID IS 'Concatenated key value of the record, columns delimited by |';
COMMENT ON COLUMN COMPARE_COLUMN_DETAIL.COLUMN_ID IS 'Column ID';
COMMENT ON COLUMN COMPARE_COLUMN_DETAIL.COLUMN_NAME IS 'Column Name';
COMMENT ON COLUMN COMPARE_COLUMN_DETAIL.VALUE_BASELINE IS 'Column value in the BASELINE file';
COMMENT ON COLUMN COMPARE_COLUMN_DETAIL.VALUE_NEW IS 'Column value in the NEW file';
